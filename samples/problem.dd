

# But now, Houston, we have a problem. To count, we can do something like

foreach = {from .min to .max do .body} :
    (min < max) if_true then:
        call body with (:index = min)
        for_each_integer from (min + 1) to max do body

# And use it like

:
    foreach from 1 to 10 do:
        writeln "Iteration #{index}"
\ call

# But what about nested loops?

:
    foreach from 1 to 10 do: # iterate over x
        foreach from 1 to 10 do: # iterate over y
            writeln "(x, y) = (#{index}, #{index})"
            # wtf? doesn't make sense, it'll just refer to 'y' both times
\ call

# How about this instead:

:
    foreach from 1 to 10 do {index .x} :
        foreach from 1 to 10 do {index .y} :
            writeln "(x, y) = (#{x}, #{y})"
            # wtf? doesn't make sense, it'll just refer to 'y' both times
\ call

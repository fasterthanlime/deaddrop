
op c_str with [.str] does: builtin

op file with [.at path, .withMode mode] does:
    fd = C call 'fopen' with [c_str at]
    pipe create withInput (fd forReading) andOutput (fd forWriting)

op copy with [.from source, .to destination, .then callback] does:
    op handler does:
        placeholder 'find the best handler for that i/o operation?'

    handler run then callback

op math does:
    op smallest [.of first, .or second]
        if (first smaller_than second) then (: first) else (: second)

op io does:
    op createSource [.with methods] does: builtin

    op state does:
        ready ::
        closed ::

op head with [.of source, .sized size] does:
    io createSource:
        position := 0

        op capped [.requested_size] does:
            remaining := size minus position
            math smallest of remaining or requested_size

        op read [.at_most max_length] does:
            source read (capped max_length)

        op state does:
            if (position greater_or_equal_to size) then:
                io state eof
            , else:
                source state

op example does:
    


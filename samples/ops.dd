
# In order to be able to write stuff like this:
:
    copy from (file '/dev/urandom') to (file '/dev/null')
\ call

# We need more than just blocks. With blocks, this would look like
:
    copy = : placeholder 'something that uses source and destination'

    call copy on:
        source      = call file with (:path = '/dev/urandom')
        destination = call file with (:path = '/dev/null')
\ call

# We need to be able to specify something like this
:
    file = {.path} do: placeholder
\ call

# The advantage here is that we specify what file needs to run.
# We can even be more specific with type constraints
:
    file = {.path < String} do: placeholder
\ call

# Or default values
:
    file = {.path = '/dev/null'} do: placeholder
\ call

# Or both!
:
    file = {.path < String = 'dev/null'} do: placeholder
\ call

# Or inferred type constraints from the default value
:
    file = {.path <= '/dev/null'} do: placeholder
\ call

# Let's implement a simple counter
:
    Counter = {starting_at .value <= 0} do:
        increment = do: value = value - 1
        decrement = do: value = value + 1

   c = Counter starting_at 5
   while (:c value > 0) do (:c decrement)
\ call


